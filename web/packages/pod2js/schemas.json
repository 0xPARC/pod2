{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "SchemaContainer",
  "type": "object",
  "required": [
    "mainpod",
    "signedpod"
  ],
  "properties": {
    "mainpod": {
      "$ref": "#/definitions/MainPodHelper"
    },
    "signedpod": {
      "$ref": "#/definitions/SignedPodHelper"
    }
  },
  "definitions": {
    "AnchoredKey": {
      "type": "object",
      "required": [
        "key",
        "podId"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/Key"
        },
        "podId": {
          "$ref": "#/definitions/PodId"
        }
      }
    },
    "Array": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Value"
      }
    },
    "CustomPredicate": {
      "description": "NOTE: fields are not public (outside of crate) to enforce the struct instantiation through the `::and/or` methods, which performs checks on the values.",
      "type": "object",
      "required": [
        "argsLen",
        "conjunction",
        "name",
        "statements"
      ],
      "properties": {
        "argsLen": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "conjunction": {
          "description": "true for \"and\", false for \"or\"",
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "statements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatementTmpl"
          }
        }
      }
    },
    "CustomPredicateBatch": {
      "type": "object",
      "required": [
        "name",
        "predicates"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "predicates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomPredicate"
          }
        }
      }
    },
    "CustomPredicateRef": {
      "type": "object",
      "required": [
        "batch",
        "index"
      ],
      "properties": {
        "batch": {
          "$ref": "#/definitions/CustomPredicateBatch"
        },
        "index": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        }
      }
    },
    "Dictionary": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Value"
      }
    },
    "Hash": {
      "type": "string",
      "pattern": "^[0-9a-fA-F]{64}$"
    },
    "Key": {
      "type": "string"
    },
    "KeyOrWildcard": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Key"
              ]
            },
            "value": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Wildcard"
              ]
            },
            "value": {
              "$ref": "#/definitions/Wildcard"
            }
          }
        }
      ]
    },
    "MainPodHelper": {
      "title": "MainPod",
      "type": "object",
      "required": [
        "podClass",
        "podType",
        "proof",
        "publicStatements"
      ],
      "properties": {
        "podClass": {
          "type": "string"
        },
        "podType": {
          "type": "string"
        },
        "proof": {
          "type": "string"
        },
        "publicStatements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      }
    },
    "NativePredicate": {
      "type": "string",
      "enum": [
        "None",
        "ValueOf",
        "Equal",
        "NotEqual",
        "Gt",
        "Lt",
        "Contains",
        "NotContains",
        "SumOf",
        "ProductOf",
        "MaxOf",
        "DictContains",
        "DictNotContains",
        "SetContains",
        "SetNotContains",
        "ArrayContains"
      ]
    },
    "PodId": {
      "$ref": "#/definitions/Hash"
    },
    "Predicate": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Native"
              ]
            },
            "value": {
              "$ref": "#/definitions/NativePredicate"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "BatchSelf"
              ]
            },
            "value": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Custom"
              ]
            },
            "value": {
              "$ref": "#/definitions/CustomPredicateRef"
            }
          }
        }
      ]
    },
    "RawValue": {
      "type": "string",
      "pattern": "^[0-9a-fA-F]{64}$"
    },
    "Set": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Value"
      },
      "uniqueItems": true
    },
    "SignedPodHelper": {
      "title": "SignedPod",
      "type": "object",
      "required": [
        "entries",
        "podClass",
        "podType",
        "proof"
      ],
      "properties": {
        "entries": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        },
        "podClass": {
          "type": "string"
        },
        "podType": {
          "type": "string"
        },
        "proof": {
          "type": "string"
        }
      }
    },
    "Statement": {
      "description": "Type encapsulating statements with their associated arguments.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "predicate"
          ],
          "properties": {
            "predicate": {
              "type": "string",
              "enum": [
                "None"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/Value"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "ValueOf"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "Equal"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "NotEqual"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "Gt"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "Lt"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 3,
              "minItems": 3
            },
            "predicate": {
              "type": "string",
              "enum": [
                "Contains"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "NotContains"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 3,
              "minItems": 3
            },
            "predicate": {
              "type": "string",
              "enum": [
                "SumOf"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 3,
              "minItems": 3
            },
            "predicate": {
              "type": "string",
              "enum": [
                "ProductOf"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                },
                {
                  "$ref": "#/definitions/AnchoredKey"
                }
              ],
              "maxItems": 3,
              "minItems": 3
            },
            "predicate": {
              "type": "string",
              "enum": [
                "MaxOf"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "args",
            "predicate"
          ],
          "properties": {
            "args": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/CustomPredicateRef"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WildcardValue"
                  }
                }
              ],
              "maxItems": 2,
              "minItems": 2
            },
            "predicate": {
              "type": "string",
              "enum": [
                "Custom"
              ]
            }
          }
        }
      ]
    },
    "StatementTmpl": {
      "description": "Statement Template for a Custom Predicate",
      "type": "object",
      "required": [
        "args",
        "pred"
      ],
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatementTmplArg"
          }
        },
        "pred": {
          "$ref": "#/definitions/Predicate"
        }
      }
    },
    "StatementTmplArg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "None"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Literal"
              ]
            },
            "value": {
              "$ref": "#/definitions/Value"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Key"
              ]
            },
            "value": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Wildcard"
                },
                {
                  "$ref": "#/definitions/KeyOrWildcard"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "WildcardLiteral"
              ]
            },
            "value": {
              "$ref": "#/definitions/Wildcard"
            }
          }
        }
      ]
    },
    "Value": {
      "description": "Represents various POD value types. Array, String, and Bool variants are represented untagged in JSON.",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "Set"
          ],
          "properties": {
            "Set": {
              "$ref": "#/definitions/Set"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "Dictionary"
          ],
          "properties": {
            "Dictionary": {
              "$ref": "#/definitions/Dictionary"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "Int"
          ],
          "properties": {
            "Int": {
              "description": "An i64 represented as a string.",
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "Raw"
          ],
          "properties": {
            "Raw": {
              "$ref": "#/definitions/RawValue"
            }
          }
        },
        {
          "$ref": "#/definitions/Array"
        },
        {
          "type": "string"
        },
        {
          "type": "boolean"
        }
      ]
    },
    "Wildcard": {
      "type": "object",
      "required": [
        "index",
        "name"
      ],
      "properties": {
        "index": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WildcardValue": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "PodId"
          ],
          "properties": {
            "PodId": {
              "$ref": "#/definitions/PodId"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Key"
          ],
          "properties": {
            "Key": {
              "$ref": "#/definitions/Key"
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
